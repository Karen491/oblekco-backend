{"version":3,"sources":["AppContext.js","Services/variables.js","Services/authServices.js","Components/HomeRoute/AuthForm.js","Components/Navbar/Navbar.js","Components/HomeRoute/Home.js","Routes.js","App.js","serviceWorker.js","index.js"],"names":["AppContext","createContext","base_url","axios","defaults","withCredentials","login","credentials","post","signup","logout","AuthForm","state","user","handleChange","e","target","name","value","setState","handleSubmit","preventDefault","isLogin","props","pathname","setUser","context","then","res","data","localStorage","setItem","JSON","stringify","catch","err","console","log","isSignup","this","className","uk-height-viewport","onSubmit","uk-icon","onChange","placeholder","id","type","to","Component","contextType","Navbar","history","removeItem","push","uk-navbar","href","onClick","Home","location","_id","Routes","exact","path","component","App","parse","getItem","Provider","Boolean","window","hostname","match","UIkit","use","Icons","WithRouter","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.189b4027.chunk.js","sourcesContent":["import { createContext } from \"react\";\n\nconst AppContext = createContext();\n\nexport default AppContext;","const isProduction = process.env.NODE_ENV === \"production\";\nexport const base_url = isProduction\n  ? \"https://oblekco-runningtracker.herokuapp.com/api\"\n  : \"http://localhost:3000/api\";","import axios from \"axios\";\nimport { base_url } from \"./variables\";\n\naxios.defaults.withCredentials = true;\n\nexport const login = (credentials) => {\n  return axios.post(`${base_url}/login`, credentials);\n};\n\nexport const signup = (credentials) => {\n  return axios.post(`${base_url}/signup`, credentials);\n};\n\nexport const logout = () => {\n  return axios.post(`${base_url}/logout`);\n};\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { login, signup } from \"../../Services/authServices\";\nimport AppContext from \"../../AppContext\";\n\nclass AuthForm extends Component {\n    static contextType = AppContext;\n    state = {\n        user: {},\n    };\n\n    handleChange = (e) => {\n        let { user } = this.state;\n        user = { ...user, [e.target.name]: e.target.value };\n        this.setState({ user });\n    };\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        const { user } = this.state;\n        const isLogin = this.props.pathname.pathname === \"/\";\n        const { setUser } = this.context;\n        const action = isLogin ? login : signup;\n\n        action(user)\n            .then((res) => {\n                if (isLogin) {\n                    const { user } = res.data;\n                    localStorage.setItem(\"user\", JSON.stringify(user));\n                    setUser(user);\n                }\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    };\n\n    render() {\n        const isSignup = this.props.pathname.pathname === \"/signup\";\n\n        return (\n            <div className=\"uk-width-1-1 uk-flex uk-flex-middle uk-flex-right login\" uk-height-viewport=\"true\">\n\n                <div className=\"uk-card uk-card-default uk-card-body uk-width-1-3@m uk-margin-xlarge-right authform-card\">\n                    <h2 className=\"title-text uk-text-center\">Running Tracker</h2>\n\n                    <form onSubmit={this.handleSubmit}>\n                        {isSignup ? (\n                            <div className=\"uk-margin\">\n                                <div className=\"uk-inline uk-width-1-1\">\n                                    <span className=\"uk-form-icon\" uk-icon=\"icon: star\"></span>\n                                    <input\n                                        onChange={this.handleChange}\n                                        placeholder=\"Name\"\n                                        id=\"name\"\n                                        name=\"name\"\n                                        className=\"uk-input\"\n                                        type=\"text\"\n                                    />\n                                </div>\n                            </div>\n                        ) : null}\n\n                        {isSignup ? (\n                            <div className=\"uk-margin\">\n                                <div className=\"uk-inline uk-width-1-1\">\n                                    <span className=\"uk-form-icon\" uk-icon=\"icon:  bolt\"></span>\n                                    <input\n                                        onChange={this.handleChange}\n                                        placeholder=\"Last name\"\n                                        id=\"last_name\"\n                                        name=\"last_name\"\n                                        className=\"uk-input\"\n                                        type=\"text\"\n                                    />\n                                </div>\n                            </div>\n                        ) : null}\n\n                        <div className=\"uk-margin\">\n                            <div className=\"uk-inline uk-width-1-1\">\n                                <span className=\"uk-form-icon\" uk-icon=\"icon: user\"></span>\n                                <input\n                                    onChange={this.handleChange}\n                                    placeholder=\"Email address\"\n                                    id=\"email\"\n                                    name=\"email\"\n                                    className=\"uk-input\"\n                                    type=\"text\"\n                                />\n                            </div>\n                        </div>\n\n                        <div className=\"uk-margin\">\n                            <div className=\"uk-inline uk-width-1-1\">\n                                <span className=\"uk-form-icon\" uk-icon=\"icon: lock\"></span>\n                                <input\n                                    onChange={this.handleChange}\n                                    placeholder=\"Password\"\n                                    id=\"password\"\n                                    name=\"password\"\n                                    className=\"uk-input\"\n                                    type=\"password\"\n                                />\n                            </div>\n                        </div>\n\n                        <button className=\"authform-button uk-width-1-1\">{isSignup ? \"Sign Up\" : \"Log In\"}</button>\n\n                        <hr className=\"uk-divider-icon\"></hr>\n\n                        {!isSignup ? (\n                            <h5 className=\"uk-text-center\">Don't have an account? <Link to=\"/signup\">Sign Up</Link></h5>\n                        ) : (\n                            <h5 className=\"uk-text-center\">Have an account? <Link to=\"/\">Log In</Link></h5>\n                        )}\n                    </form>\n                </div>\n            </div>\n        )\n    }\n};\n\nAuthForm.contextType = AppContext;\n\nexport default AuthForm;","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { logout } from \"../../Services/authServices\";\n\nclass Navbar extends Component {\n    logout = () => {\n        const { history } = this.props;\n        logout().then(() => {\n            localStorage.removeItem(\"user\");\n            this.setState({ user: {} });\n            history.push(\"/\");\n        });\n    };\n\n    render() {\n        return (\n            <nav className=\"navbar\" uk-navbar=\"true\">\n                <div className=\"uk-navbar-left\">\n                    <Link className=\"nav-title-text\" to=\"/home\">Running Tracker</Link>\n                </div>\n\n                <div className=\"uk-navbar-right\">\n                    <Link className=\"nav-text\" to=\"/home\">+ Add New Race</Link>\n                    <a className=\"nav-text\" href=\"/\" onClick={this.logout}>Log Out</a>\n                </div>\n            </nav>\n        )\n    }\n};\n\nexport default Navbar;\n","import React, { Component } from \"react\";\nimport AppContext from \"../../AppContext\";\nimport AuthForm from \"../HomeRoute/AuthForm\";\nimport Navbar from \"../Navbar/Navbar\";\n\nclass Home extends Component {\n    static contextType = AppContext;\n\n    render () {\n        const { state } = this.context;\n        const pathname = this.props.location;\n\n        return (\n            <div>\n                {state.user._id ? (\n                    <Navbar />\n                ) : (\n                    <AuthForm pathname={pathname}/>\n                )}\n            </div>\n        )\n    }\n};\n\nHome.contextType = AppContext;\n\nexport default Home;","import React from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport Home from \"./Components/HomeRoute/Home\";\n\nconst Routes = () => (\n    <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route exact path=\"/signup\" component={Home} />\n    </Switch>\n);\n\nexport default Routes; ","import React, { Component } from 'react';\nimport AppContext from \"./AppContext\";\nimport './App.css';\nimport Routes from './Routes';\n\nclass App extends Component {\n  state = {\n    user: JSON.parse(localStorage.getItem(\"user\")) || {},\n  }\n\n  setUser = (user) => {\n    this.setState({ user });\n  };\n\n  render() {\n    const {state, setUser} = this;\n    \n    return (\n      <AppContext.Provider\n        value={{\n          state,\n          setUser,\n        }}\n      \n      >\n        <div className=\"home\">\n          <Routes />\n        </div>\n      </AppContext.Provider>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport UIkit from \"uikit\";\nimport \"uikit/dist/css/uikit.min.css\";\nimport Icons from \"uikit/dist/js/uikit-icons\";\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from \"react-router-dom\";\n\nUIkit.use(Icons);\n\nconst WithRouter = () => (\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>\n);\n\nReactDOM.render(<WithRouter />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}