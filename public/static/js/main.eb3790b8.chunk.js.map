{"version":3,"sources":["AppContext.js","Services/variables.js","Services/authServices.js","Components/Navbar/Navbar.js","Components/HomeRoute/AuthForm.js","Services/runServices.js","Components/Runs/RunForm.js","Routes.js","App.js","serviceWorker.js","index.js"],"names":["AppContext","createContext","base_url","axios","defaults","withCredentials","login","credentials","post","signup","logout","Navbar","history","props","then","localStorage","removeItem","setState","user","push","state","this","context","_id","className","uk-navbar","to","href","onClick","Component","contextType","AuthForm","handleChange","e","target","name","value","handleSubmit","preventDefault","isLogin","location","pathname","setUser","res","data","setItem","JSON","stringify","catch","err","console","log","isSignup","uk-height-viewport","onSubmit","uk-icon","onChange","placeholder","id","type","createRun","run","RunForm","distance","document","getElementById","reload","error","response","today","dayjs","format","uk-grid","src","alt","uk-cover","width","height","max","it","Routes","exact","path","component","App","parse","getItem","Provider","Boolean","window","hostname","match","UIkit","use","Icons","WithRouter","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"mUAIeA,EAFIC,0B,gCCDNC,EACT,mDCCJC,IAAMC,SAASC,iBAAkB,EAE1B,IAAMC,EAAQ,SAACC,GACpB,OAAOJ,IAAMK,KAAN,UAAcN,EAAd,UAAgCK,IAG5BE,EAAS,SAACF,GACrB,OAAOJ,IAAMK,KAAN,UAAcN,EAAd,WAAiCK,IAG7BG,EAAS,WACpB,OAAOP,IAAMK,KAAN,UAAcN,EAAd,aCTHS,E,4MAGFD,OAAS,WAAO,IACJE,EAAY,EAAKC,MAAjBD,QACRF,IAASI,MAAK,WACVC,aAAaC,WAAW,QACxB,EAAKC,SAAS,CAAEC,KAAM,KACtBN,EAAQO,KAAK,S,uDAIX,IACEC,EAAUC,KAAKC,QAAfF,MAER,OACI,6BACKA,EAAMF,KAAKK,KACR,yBAAKC,UAAU,SAASC,YAAU,QAC9B,yBAAKD,UAAU,kBACX,kBAAC,IAAD,CAAMA,UAAU,iBAAiBE,GAAG,KAApC,oBAGJ,yBAAKF,UAAU,mBACX,kBAAC,IAAD,CAAMA,UAAU,WAAWE,GAAG,KAA9B,WACA,kBAAC,IAAD,CAAMF,UAAU,WAAWE,GAAG,WAA9B,iBACA,uBAAGF,UAAU,WAAWG,KAAK,IAAIC,QAASP,KAAKX,QAA/C,kB,GA1BPmB,aAAflB,EACKmB,YAAc9B,EAkCzBW,EAAOmB,YAAc9B,EAENW,Q,uBCrCToB,E,4MAEFX,MAAQ,CACJF,KAAM,I,EAGVc,aAAe,SAACC,GAAO,IACbf,EAAS,EAAKE,MAAdF,KACNA,EAAI,eAAQA,EAAR,eAAee,EAAEC,OAAOC,KAAOF,EAAEC,OAAOE,QAC5C,EAAKnB,SAAS,CAAEC,U,EAGpBmB,aAAe,SAACJ,GACZA,EAAEK,iBADgB,IAEVpB,EAAS,EAAKE,MAAdF,KACFqB,EAA2C,MAAjC,EAAK1B,MAAM2B,SAASC,SAC5BC,EAAY,EAAKpB,QAAjBoB,SACOH,EAAUjC,EAAQG,GAE1BS,GACFJ,MAAK,SAAC6B,GACH,GAAIJ,EAAS,CAAC,IACFrB,EAASyB,EAAIC,KAAb1B,KACRH,aAAa8B,QAAQ,OAAQC,KAAKC,UAAU7B,IAC5CwB,EAAQxB,OAGf8B,OAAM,SAACC,GACJC,QAAQC,IAAIF,O,uDAKpB,IAAMG,EAA4C,YAAjC/B,KAAKR,MAAM2B,SAASC,SAC7BrB,EAAUC,KAAKC,QAAfF,MAER,OACI,8BACMA,EAAMF,KAAKK,KACD,yBAAKC,UAAU,0DAA0D6B,qBAAmB,QAC5F,yBAAK7B,UAAU,4FACX,wBAAIA,UAAU,6BAAd,mBAEA,0BAAM8B,SAAUjC,KAAKgB,cAChBe,EACG,yBAAK5B,UAAU,aACX,yBAAKA,UAAU,0BACX,0BAAMA,UAAU,eAAe+B,UAAQ,eACvC,2BACIC,SAAUnC,KAAKW,aACfyB,YAAY,OACZC,GAAG,OACHvB,KAAK,OACLX,UAAU,WACVmC,KAAK,WAIjB,KAEHP,EACG,yBAAK5B,UAAU,aACX,yBAAKA,UAAU,0BACX,0BAAMA,UAAU,eAAe+B,UAAQ,gBACvC,2BACIC,SAAUnC,KAAKW,aACfyB,YAAY,YACZC,GAAG,YACHvB,KAAK,YACLX,UAAU,WACVmC,KAAK,WAIjB,KAEJ,yBAAKnC,UAAU,aACX,yBAAKA,UAAU,0BACX,0BAAMA,UAAU,eAAe+B,UAAQ,eACvC,2BACIC,SAAUnC,KAAKW,aACfyB,YAAY,gBACZC,GAAG,QACHvB,KAAK,QACLX,UAAU,WACVmC,KAAK,WAKjB,yBAAKnC,UAAU,aACX,yBAAKA,UAAU,0BACX,0BAAMA,UAAU,eAAe+B,UAAQ,eACvC,2BACIC,SAAUnC,KAAKW,aACfyB,YAAY,WACZC,GAAG,WACHvB,KAAK,WACLX,UAAU,WACVmC,KAAK,eAKjB,4BAAQnC,UAAU,gCAAgC4B,EAAW,UAAY,UAEzE,wBAAI5B,UAAU,oBAEZ4B,EAGE,wBAAI5B,UAAU,kBAAd,oBAAgD,kBAAC,IAAD,CAAME,GAAG,KAAT,WAFhD,wBAAIF,UAAU,kBAAd,0BAAsD,kBAAC,IAAD,CAAME,GAAG,WAAT,oB,GA7GvEG,aAAjBE,EACKD,YAAc9B,EAyHzB+B,EAASD,YAAc9B,EAER+B,Q,iBC9Hf5B,IAAMC,SAASC,iBAAkB,EAE1B,IAAMuD,EAAY,SAACC,GACxB,OAAO1D,IAAMK,KAAN,UAAcN,EAAd,QAA8B2D,IC8GxBC,E,4MA/GX1C,MAAQ,CACJyC,IAAK,I,EAGT7B,aAAe,SAACC,GAAO,IAAD,EACZ4B,EAAQ,EAAKzC,MAAbyC,IACAE,EAAWC,SAASC,eAAe,YAAY7B,MAC/CuB,EAAOK,SAASC,eAAe,QAAQ7B,MAC7CyB,EAAG,eAAQA,GAAR,mBAAc5B,EAAEC,OAAOC,KAAOF,EAAEC,OAAOE,OAAvC,yBAAwD2B,GAAxD,qBAAwEJ,GAAxE,IACH,EAAK1C,SAAS,CAAE4C,S,EAGpBxB,aAAe,SAACJ,GACZA,EAAEK,iBADgB,IAEVuB,EAAQ,EAAKzC,MAAbyC,IACRD,EAAUC,GACL/C,MAAK,WACFkD,SAASxB,SAAS0B,QAAO,MAE5BlB,OAAM,SAACL,GAAD,OAASO,QAAQiB,MAAMxB,EAAIyB,c,uDAItC,IAAMC,EAAQC,MAAQC,OAAO,cAE7B,OACI,yBAAK/C,UAAU,sGAAsGgD,UAAQ,QACzH,yBAAKhD,UAAU,yDACX,yBAAKiD,IAAI,+FAA+FC,IAAI,GAAGC,WAAS,SACxH,4BAAQC,MAAM,MAAMC,OAAO,SAG/B,6BACI,yBAAKrD,UAAU,gBACX,uCACA,0BAAMA,UAAU,gBAAgBgD,UAAQ,OAAOlB,SAAUjC,KAAKgB,cAE1D,yBAAKb,UAAU,kBACX,2BAAOA,UAAU,iBAAjB,QACA,2BACIgC,SAAUnC,KAAKW,aACfR,UAAU,WACVW,KAAK,OACLuB,GAAG,OACHC,KAAK,OACLmB,IAAKT,KAIb,yBAAK7C,UAAU,kBACX,2BAAOA,UAAU,iBAAjB,YACA,4BAAQA,UAAU,YAAYkC,GAAG,YAC7B,sCACA,uCACA,uCACA,uCACA,uCACA,oDAIR,yBAAKlC,UAAU,kBACX,2BAAOA,UAAU,iBAAjB,WACA,2BACIgC,SAAUnC,KAAKW,aACfR,UAAU,WACVW,KAAK,UACL4C,GAAG,UACHpB,KAAK,UAIb,yBAAKnC,UAAU,kBACX,2BAAOA,UAAU,iBAAjB,QACA,2BACIgC,SAAUnC,KAAKW,aACfR,UAAU,WACVW,KAAK,OACL4C,GAAG,OACHpB,KAAK,UAIb,yBAAKnC,UAAU,kBACX,2BAAOA,UAAU,iBAAjB,YACA,4BAAQA,UAAU,YAAYkC,GAAG,QAC7B,yCACA,0CAIR,yBAAKlC,UAAU,kBACX,2BAAOA,UAAU,iBAAjB,gBACA,2BACIgC,SAAUnC,KAAKW,aACfR,UAAU,WACVW,KAAK,SACLuB,GAAG,SACHC,KAAK,YAIb,4BAAQnC,UAAU,+CAAlB,oB,GAvGNK,aCSPmD,EARA,kBACX,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWpD,IACjC,kBAAC,IAAD,CAAOkD,OAAK,EAACC,KAAK,UAAUC,UAAWpD,IACvC,kBAAC,IAAD,CAAOkD,OAAK,EAACC,KAAK,UAAUC,UAAWrB,MC0BhCsB,E,4MA5BbhE,MAAQ,CACNF,KAAM4B,KAAKuC,MAAMtE,aAAauE,QAAQ,UAAY,I,EAGpD5C,QAAU,SAACxB,GACT,EAAKD,SAAS,CAAEC,U,uDAGR,IACAE,EAAmBC,KAAnBD,MAAOsB,EAAYrB,KAAZqB,QAEf,OACE,kBAAC,EAAW6C,SAAZ,CACEnD,MAAO,CACLhB,QACAsB,YAIF,yBAAKlB,UAAU,QACZJ,EAAMF,KAAKK,KAAO,kBAAC,EAAD,MACnB,kBAAC,EAAD,Y,GAtBQM,aCME2D,QACW,cAA7BC,OAAOjD,SAASkD,UAEe,UAA7BD,OAAOjD,SAASkD,UAEhBD,OAAOjD,SAASkD,SAASC,MACvB,2DCRNC,IAAMC,IAAIC,KAEV,IAAMC,EAAa,kBACjB,kBAAC,IAAD,KACE,kBAAC,EAAD,QAIJC,IAASC,OAAO,kBAAC,EAAD,MAAgBjC,SAASC,eAAe,SDiHlD,kBAAmBiC,WACrBA,UAAUC,cAAcC,MACrBtF,MAAK,SAAAuF,GACJA,EAAaC,gBAEdtD,OAAM,SAAAmB,GACLjB,QAAQiB,MAAMA,EAAMoC,c","file":"static/js/main.eb3790b8.chunk.js","sourcesContent":["import { createContext } from \"react\";\n\nconst AppContext = createContext();\n\nexport default AppContext;","const isProduction = process.env.NODE_ENV === \"production\";\nexport const base_url = isProduction\n  ? \"https://oblekco-runningtracker.herokuapp.com/api\"\n  : \"http://localhost:3000/api\";","import axios from \"axios\";\nimport { base_url } from \"./variables\";\n\naxios.defaults.withCredentials = true;\n\nexport const login = (credentials) => {\n  return axios.post(`${base_url}/login`, credentials);\n};\n\nexport const signup = (credentials) => {\n  return axios.post(`${base_url}/signup`, credentials);\n};\n\nexport const logout = () => {\n  return axios.post(`${base_url}/logout`);\n};\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { logout } from \"../../Services/authServices\";\nimport AppContext from \"../../AppContext\";\n\nclass Navbar extends Component {\n    static contextType = AppContext;\n\n    logout = () => {\n        const { history } = this.props;\n        logout().then(() => {\n            localStorage.removeItem(\"user\");\n            this.setState({ user: {} });\n            history.push(\"/\");\n        });\n    };\n\n    render() {\n        const { state } = this.context;\n\n        return (\n            <div>\n                {state.user._id &&\n                    <nav className=\"navbar\" uk-navbar=\"true\">\n                        <div className=\"uk-navbar-left\">\n                            <Link className=\"nav-title-text\" to=\"/\">Running Tracker</Link>\n                        </div>\n\n                        <div className=\"uk-navbar-right\">\n                            <Link className=\"nav-text\" to=\"/\">My Runs</Link>\n                            <Link className=\"nav-text\" to=\"/newrun\">+ Add New Run</Link>\n                            <a className=\"nav-text\" href=\"/\" onClick={this.logout}>Log Out</a>\n                        </div>\n                    </nav>\n                }\n            </div>\n        )\n    }\n};\n\nNavbar.contextType = AppContext;\n\nexport default Navbar;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { login, signup } from \"../../Services/authServices\";\nimport AppContext from \"../../AppContext\";\n\nclass AuthForm extends Component {\n    static contextType = AppContext;\n    state = {\n        user: {},\n    };\n\n    handleChange = (e) => {\n        let { user } = this.state;\n        user = { ...user, [e.target.name]: e.target.value };\n        this.setState({ user });\n    };\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        const { user } = this.state;\n        const isLogin = this.props.location.pathname === \"/\";\n        const { setUser } = this.context;\n        const action = isLogin ? login : signup;\n\n        action(user)\n            .then((res) => {\n                if (isLogin) {\n                    const { user } = res.data;\n                    localStorage.setItem(\"user\", JSON.stringify(user));\n                    setUser(user);\n                }\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    };\n\n    render() {\n        const isSignup = this.props.location.pathname === \"/signup\";\n        const { state } = this.context;\n\n        return (\n            <div>\n                {!state.user._id &&\n                            <div className=\"uk-width-1-1 uk-flex uk-flex-middle uk-flex-right login\" uk-height-viewport=\"true\">\n                            <div className=\"uk-card uk-card-default uk-card-body uk-width-1-3@m uk-margin-xlarge-right authform-card\">\n                                <h2 className=\"title-text uk-text-center\">Running Tracker</h2>\n            \n                                <form onSubmit={this.handleSubmit}>\n                                    {isSignup ? (\n                                        <div className=\"uk-margin\">\n                                            <div className=\"uk-inline uk-width-1-1\">\n                                                <span className=\"uk-form-icon\" uk-icon=\"icon: star\"></span>\n                                                <input\n                                                    onChange={this.handleChange}\n                                                    placeholder=\"Name\"\n                                                    id=\"name\"\n                                                    name=\"name\"\n                                                    className=\"uk-input\"\n                                                    type=\"text\"\n                                                />\n                                            </div>\n                                        </div>\n                                    ) : null}\n            \n                                    {isSignup ? (\n                                        <div className=\"uk-margin\">\n                                            <div className=\"uk-inline uk-width-1-1\">\n                                                <span className=\"uk-form-icon\" uk-icon=\"icon:  bolt\"></span>\n                                                <input\n                                                    onChange={this.handleChange}\n                                                    placeholder=\"Last name\"\n                                                    id=\"last_name\"\n                                                    name=\"last_name\"\n                                                    className=\"uk-input\"\n                                                    type=\"text\"\n                                                />\n                                            </div>\n                                        </div>\n                                    ) : null}\n            \n                                    <div className=\"uk-margin\">\n                                        <div className=\"uk-inline uk-width-1-1\">\n                                            <span className=\"uk-form-icon\" uk-icon=\"icon: user\"></span>\n                                            <input\n                                                onChange={this.handleChange}\n                                                placeholder=\"Email address\"\n                                                id=\"email\"\n                                                name=\"email\"\n                                                className=\"uk-input\"\n                                                type=\"text\"\n                                            />\n                                        </div>\n                                    </div>\n            \n                                    <div className=\"uk-margin\">\n                                        <div className=\"uk-inline uk-width-1-1\">\n                                            <span className=\"uk-form-icon\" uk-icon=\"icon: lock\"></span>\n                                            <input\n                                                onChange={this.handleChange}\n                                                placeholder=\"Password\"\n                                                id=\"password\"\n                                                name=\"password\"\n                                                className=\"uk-input\"\n                                                type=\"password\"\n                                            />\n                                        </div>\n                                    </div>\n            \n                                    <button className=\"authform-button uk-width-1-1\">{isSignup ? \"Sign Up\" : \"Log In\"}</button>\n            \n                                    <hr className=\"uk-divider-icon\"></hr>\n            \n                                    {!isSignup ? (\n                                        <h5 className=\"uk-text-center\">Don't have an account? <Link to=\"/signup\">Sign Up</Link></h5>\n                                    ) : (\n                                        <h5 className=\"uk-text-center\">Have an account? <Link to=\"/\">Log In</Link></h5>\n                                    )}\n                                </form>\n                            </div>\n                        </div>\n                }\n            </div>\n        )\n    }\n};\n\nAuthForm.contextType = AppContext;\n\nexport default AuthForm;","import axios from \"axios\";\nimport { base_url } from \"./variables\";\n\naxios.defaults.withCredentials = true;\n\nexport const createRun = (run) => {\n  return axios.post(`${base_url}/run`, run);\n};\n","import React, { Component } from \"react\";\nimport dayjs from \"dayjs\";\nimport { createRun } from \"../../Services/runServices\";\n\nclass RunForm extends Component {\n    state = {\n        run: {},\n    };\n\n    handleChange = (e) => {\n        let { run } = this.state;\n        const distance = document.getElementById(\"distance\").value;\n        const type = document.getElementById(\"type\").value;\n        run = { ...run, [e.target.name]: e.target.value, distance: distance, type: type };\n        this.setState({ run });\n    };\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        const { run } = this.state;\n        createRun(run)\n            .then(() => {\n                document.location.reload(true);\n            })\n            .catch((res) => console.error(res.response));\n    };\n\n    render() {\n        const today = dayjs().format(\"YYYY-MM-DD\");\n\n        return (\n            <div className=\"uk-width-4-5 uk-card uk-card-default uk-grid-collapse uk-child-width-1-2@s uk-margin uk-margin-left\" uk-grid=\"true\">\n                <div className=\"uk-flex-last@s uk-card-media-right uk-cover-container\">\n                    <img src=\"https://res.cloudinary.com/karen491/image/upload/v1599338719/oblekco/running-form_jfp907.jpg\" alt=\"\" uk-cover=\"true\" />\n                    <canvas width=\"600\" height=\"200\"></canvas>\n                </div>\n\n                <div>\n                    <div className=\"uk-card-body\">\n                        <h2>New Run</h2>\n                        <form className=\"uk-grid-small\" uk-grid=\"true\" onSubmit={this.handleSubmit}>\n\n                            <div className=\"uk-width-1-2@s\">\n                                <label className=\"uk-form-label\">Date</label>\n                                <input\n                                    onChange={this.handleChange}\n                                    className=\"uk-input\"\n                                    name=\"date\"\n                                    id=\"date\"\n                                    type=\"date\"\n                                    max={today}\n                                />\n                            </div>\n\n                            <div className=\"uk-width-1-2@s\">\n                                <label className=\"uk-form-label\">Distance</label>\n                                <select className=\"uk-select\" id=\"distance\">\n                                    <option>5K</option>\n                                    <option>10K</option>\n                                    <option>15K</option>\n                                    <option>21K</option>\n                                    <option>30K</option>\n                                    <option>Marathon (42K)</option>\n                                </select>\n                            </div>\n\n                            <div className=\"uk-width-1-2@s\">\n                                <label className=\"uk-form-label\">Country</label>\n                                <input\n                                    onChange={this.handleChange}\n                                    className=\"uk-input\"\n                                    name=\"country\"\n                                    it=\"country\"\n                                    type=\"text\"\n                                />\n                            </div>\n\n                            <div className=\"uk-width-1-2@s\">\n                                <label className=\"uk-form-label\">City</label>\n                                <input\n                                    onChange={this.handleChange}\n                                    className=\"uk-input\"\n                                    name=\"city\"\n                                    it=\"city\"\n                                    type=\"text\"\n                                />\n                            </div>\n\n                            <div className=\"uk-width-1-2@s\">\n                                <label className=\"uk-form-label\">Run type</label>\n                                <select className=\"uk-select\" id=\"type\">\n                                    <option>Trail</option>\n                                    <option>Road</option>\n                                </select>\n                            </div>\n\n                            <div className=\"uk-width-1-2@s\">\n                                <label className=\"uk-form-label\">Timing (min)</label>\n                                <input\n                                    onChange={this.handleChange}\n                                    className=\"uk-input\"\n                                    name=\"timing\"\n                                    id=\"timing\"\n                                    type=\"number\"\n                                />\n                            </div>\n\n                            <button className=\"runform-button uk-width-1-2 uk-align-center\">Save Run</button>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n};\n\nexport default RunForm;","import React from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport AuthForm from \"./Components/HomeRoute/AuthForm\";\nimport RunForm from \"./Components/Runs/RunForm\";\n\nconst Routes = () => (\n    <Switch>\n        <Route exact path=\"/\" component={AuthForm} />\n        <Route exact path=\"/signup\" component={AuthForm} />\n        <Route exact path=\"/newrun\" component={RunForm} />\n    </Switch>\n);\n\nexport default Routes; ","import React, { Component } from 'react';\nimport AppContext from \"./AppContext\";\nimport './App.css';\nimport Navbar from \"./Components/Navbar/Navbar\";\nimport Routes from './Routes';\n\nclass App extends Component {\n  state = {\n    user: JSON.parse(localStorage.getItem(\"user\")) || {},\n  }\n\n  setUser = (user) => {\n    this.setState({ user });\n  };\n\n  render() {\n    const { state, setUser } = this;\n\n    return (\n      <AppContext.Provider\n        value={{\n          state,\n          setUser,\n        }}\n\n      >\n        <div className=\"home\">\n          {state.user._id && <Navbar />}\n          <Routes />\n        </div>\n      </AppContext.Provider>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport UIkit from \"uikit\";\nimport \"uikit/dist/css/uikit.min.css\";\nimport Icons from \"uikit/dist/js/uikit-icons\";\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from \"react-router-dom\";\n\nUIkit.use(Icons);\n\nconst WithRouter = () => (\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>\n);\n\nReactDOM.render(<WithRouter />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}