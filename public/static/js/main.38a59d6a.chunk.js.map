{"version":3,"sources":["AppContext.js","Services/variables.js","Services/authServices.js","Components/Navbar/Navbar.js","Components/HomeRoute/Home.js","Components/HomeRoute/AuthForm.js","Services/runServices.js","Components/Runs/RunForm.js","Components/Runs/RunList.js","Utils/dataUtils.js","Routes.js","App.js","serviceWorker.js","index.js"],"names":["AppContext","createContext","base_url","axios","defaults","withCredentials","login","credentials","post","signup","logout","Navbar","history","props","then","localStorage","removeItem","setState","user","push","state","this","context","_id","className","uk-navbar","to","href","onClick","Component","contextType","Home","tabIndex","uk-slider","src","alt","uk-slidenav-previous","uk-slider-item","uk-slidenav-next","AuthForm","handleChange","e","target","name","value","handleSubmit","preventDefault","isLogin","location","pathname","setUser","res","data","setItem","JSON","stringify","catch","err","console","log","isSignup","uk-height-viewport","onSubmit","uk-icon","onChange","placeholder","id","type","createRun","run","RunForm","distance","document","getElementById","reload","error","response","today","dayjs","format","uk-grid","uk-cover","width","height","max","it","RunList","runs","get","result","reduce","acc","item","obj","Object","values","map","index","key","timing","date","city","country","Routes","exact","path","component","App","parse","getItem","Provider","Boolean","window","hostname","match","UIkit","use","Icons","WithRouter","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.38a59d6a.chunk.js","sourcesContent":["import { createContext } from \"react\";\n\nconst AppContext = createContext();\n\nexport default AppContext;","const isProduction = process.env.NODE_ENV === \"production\";\nexport const base_url = isProduction\n  ? \"https://oblekco-runningtracker.herokuapp.com/api\"\n  : \"http://localhost:3000/api\";","import axios from \"axios\";\nimport { base_url } from \"./variables\";\n\naxios.defaults.withCredentials = true;\n\nexport const login = (credentials) => {\n  return axios.post(`${base_url}/login`, credentials);\n};\n\nexport const signup = (credentials) => {\n  return axios.post(`${base_url}/signup`, credentials);\n};\n\nexport const logout = () => {\n  return axios.post(`${base_url}/logout`);\n};\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { logout } from \"../../Services/authServices\";\nimport AppContext from \"../../AppContext\";\n\nclass Navbar extends Component {\n    static contextType = AppContext;\n\n    logout = () => {\n        const { history } = this.props;\n        logout().then(() => {\n            localStorage.removeItem(\"user\");\n            this.setState({ user: {} });\n            history.push(\"/\");\n        });\n    };\n\n    render() {\n        const { state } = this.context;\n\n        return (\n            <div>\n                {state.user._id &&\n                    <nav className=\"navbar\" uk-navbar=\"true\">\n                        <div className=\"uk-navbar-left\">\n                            <Link className=\"nav-title-text\" to=\"/\">Running Tracker</Link>\n                        </div>\n\n                        <div className=\"uk-navbar-right\">\n                            <Link className=\"nav-text\" to=\"/myruns\">My Runs</Link>\n                            <Link className=\"nav-text\" to=\"/newrun\">+ Add New Run</Link>\n                            <a className=\"nav-text\" href=\"/\" onClick={this.logout}>Log Out</a>\n                        </div>\n                    </nav>\n                }\n            </div>\n        )\n    }\n};\n\nNavbar.contextType = AppContext;\n\nexport default Navbar;\n","import React, { Component } from \"react\";\n\nclass Home extends Component {\n\n    render() {\n        return (\n            <div className=\"uk-position-center\">\n                <div className=\"uk-text-center\">\n                    <h3 className=\"uk-text-italic\">\"RUNNING is the greatest metaphor for life, because you get out of it what you put into it.\"</h3>\n                </div>\n\n                <div className=\"uk-position-relative uk-visible-toggle uk-light uk-margin-top uk-margin-left uk-margin-right\" tabIndex=\"-1\" uk-slider=\"true\">\n                    <ul className=\"uk-slider-items uk-child-width-1-2 uk-child-width-1-3@m uk-grid\">\n                        <li>\n                            <div className=\"uk-panel\">\n                                <img src=\"https://res.cloudinary.com/karen491/image/upload/v1599418984/oblekco/running1_kqrokc.jpg\" alt=\"\" />\n                                <div className=\"uk-position-center uk-panel\"><h1>1</h1></div>\n                            </div>\n                        </li>\n                        <li>\n                            <div className=\"uk-panel\">\n                                <img src=\"https://res.cloudinary.com/karen491/image/upload/c_scale,h_701,w_1000/v1599419016/oblekco/running2_rr8p5n.jpg\" alt=\"\" />\n                                <div className=\"uk-position-center uk-panel\"><h1>2</h1></div>\n                            </div>\n                        </li>\n                        <li>\n                            <div className=\"uk-panel\">\n                                <img src=\"https://res.cloudinary.com/karen491/image/upload/c_scale,h_701,w_1000/v1599418983/oblekco/running3_ypx7kn.jpg\" alt=\"\" />\n                                <div className=\"uk-position-center uk-panel\"><h1>3</h1></div>\n                            </div>\n                        </li>\n                        <li>\n                            <div className=\"uk-panel\">\n                                <img src=\"https://res.cloudinary.com/karen491/image/upload/c_scale,h_701,w_1000/v1599419029/oblekco/running4_r6fs6g.jpg\" alt=\"\" />\n                                <div className=\"uk-position-center uk-panel\"><h1>4</h1></div>\n                            </div>\n                        </li>\n                        <li>\n                            <div className=\"uk-panel\">\n                                <img src=\"https://res.cloudinary.com/karen491/image/upload/c_scale,h_701,w_1000/v1599418995/oblekco/running5_wloc1q.jpg\" alt=\"\" />\n                                <div className=\"uk-position-center uk-panel\"><h1>5</h1></div>\n                            </div>\n                        </li>\n                    </ul>\n\n                    <a className=\"uk-position-center-left uk-position-small uk-hidden-hover\" href=\"/\" uk-slidenav-previous=\"true\" uk-slider-item=\"previous\"> </a>\n                    <a className=\"uk-position-center-right uk-position-small uk-hidden-hover\" href=\"/\" uk-slidenav-next=\"true\" uk-slider-item=\"next\"> </a>\n\n                </div>\n            </div>\n        )\n    }\n};\n\nexport default Home;","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { login, signup } from \"../../Services/authServices\";\nimport Home from \"../HomeRoute/Home\";\nimport AppContext from \"../../AppContext\";\n\nclass AuthForm extends Component {\n    static contextType = AppContext;\n    state = {\n        user: {},\n    };\n\n    handleChange = (e) => {\n        let { user } = this.state;\n        user = { ...user, [e.target.name]: e.target.value };\n        this.setState({ user });\n    };\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        const { user } = this.state;\n        const isLogin = this.props.location.pathname === \"/\";\n        const { setUser } = this.context;\n        const action = isLogin ? login : signup;\n\n        action(user)\n            .then((res) => {\n                if (isLogin) {\n                    const { user } = res.data;\n                    localStorage.setItem(\"user\", JSON.stringify(user));\n                    setUser(user);\n                }\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    };\n\n    render() {\n        const isSignup = this.props.location.pathname === \"/signup\";\n        const { state } = this.context;\n\n        return (\n            <div>\n                {!state.user._id &&\n                            <div className=\"uk-width-1-1 uk-flex uk-flex-middle uk-flex-right login\" uk-height-viewport=\"true\">\n                            <div className=\"uk-card uk-card-default uk-card-body uk-width-1-3@m uk-margin-xlarge-right authform-card\">\n                                <h2 className=\"title-text uk-text-center\">Running Tracker</h2>\n            \n                                <form onSubmit={this.handleSubmit}>\n                                    {isSignup ? (\n                                        <div className=\"uk-margin\">\n                                            <div className=\"uk-inline uk-width-1-1\">\n                                                <span className=\"uk-form-icon\" uk-icon=\"icon: star\"></span>\n                                                <input\n                                                    onChange={this.handleChange}\n                                                    placeholder=\"Name\"\n                                                    id=\"name\"\n                                                    name=\"name\"\n                                                    className=\"uk-input\"\n                                                    type=\"text\"\n                                                />\n                                            </div>\n                                        </div>\n                                    ) : null}\n            \n                                    {isSignup ? (\n                                        <div className=\"uk-margin\">\n                                            <div className=\"uk-inline uk-width-1-1\">\n                                                <span className=\"uk-form-icon\" uk-icon=\"icon:  bolt\"></span>\n                                                <input\n                                                    onChange={this.handleChange}\n                                                    placeholder=\"Last name\"\n                                                    id=\"last_name\"\n                                                    name=\"last_name\"\n                                                    className=\"uk-input\"\n                                                    type=\"text\"\n                                                />\n                                            </div>\n                                        </div>\n                                    ) : null}\n            \n                                    <div className=\"uk-margin\">\n                                        <div className=\"uk-inline uk-width-1-1\">\n                                            <span className=\"uk-form-icon\" uk-icon=\"icon: user\"></span>\n                                            <input\n                                                onChange={this.handleChange}\n                                                placeholder=\"Email address\"\n                                                id=\"email\"\n                                                name=\"email\"\n                                                className=\"uk-input\"\n                                                type=\"text\"\n                                            />\n                                        </div>\n                                    </div>\n            \n                                    <div className=\"uk-margin\">\n                                        <div className=\"uk-inline uk-width-1-1\">\n                                            <span className=\"uk-form-icon\" uk-icon=\"icon: lock\"></span>\n                                            <input\n                                                onChange={this.handleChange}\n                                                placeholder=\"Password\"\n                                                id=\"password\"\n                                                name=\"password\"\n                                                className=\"uk-input\"\n                                                type=\"password\"\n                                            />\n                                        </div>\n                                    </div>\n            \n                                    <button className=\"authform-button uk-width-1-1\">{isSignup ? \"Sign Up\" : \"Log In\"}</button>\n            \n                                    <hr className=\"uk-divider-icon\"></hr>\n            \n                                    {!isSignup ? (\n                                        <h5 className=\"uk-text-center\">Don't have an account? <Link to=\"/signup\">Sign Up</Link></h5>\n                                    ) : (\n                                        <h5 className=\"uk-text-center\">Have an account? <Link to=\"/\">Log In</Link></h5>\n                                    )}\n                                </form>\n                            </div>\n                        </div>\n                }\n\n                {state.user._id &&\n                    <Home />\n                }\n            </div>\n        )\n    }\n};\n\nAuthForm.contextType = AppContext;\n\nexport default AuthForm;","import axios from \"axios\";\nimport { base_url } from \"./variables\";\n\naxios.defaults.withCredentials = true;\n\nexport const createRun = (run) => {\n  return axios.post(`${base_url}/run`, run);\n};\n\nexport const getRun = (run) => {\n  return axios.get(`${base_url}/run`, run);\n};\n","import React, { Component } from \"react\";\nimport dayjs from \"dayjs\";\nimport { createRun } from \"../../Services/runServices\";\n\nclass RunForm extends Component {\n    state = {\n        run: {},\n    };\n\n    handleChange = (e) => {\n        let { run } = this.state;\n        const distance = document.getElementById(\"distance\").value;\n        const type = document.getElementById(\"type\").value;\n        run = { ...run, [e.target.name]: e.target.value, distance: distance, type: type };\n        this.setState({ run });\n    };\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        const { run } = this.state;\n        createRun(run)\n            .then(() => {\n                document.location.reload(true);\n            })\n            .catch((res) => console.error(res.response));\n    };\n\n    render() {\n        const today = dayjs().format(\"YYYY-MM-DD\");\n\n        return (\n            <div className=\"uk-width-4-5 uk-card uk-card-default uk-grid-collapse uk-child-width-1-2@s uk-margin uk-margin-left\" uk-grid=\"true\">\n                <div className=\"uk-flex-last@s uk-card-media-right uk-cover-container\">\n                    <img src=\"https://res.cloudinary.com/karen491/image/upload/v1599338719/oblekco/running-form_jfp907.jpg\" alt=\"\" uk-cover=\"true\" />\n                    <canvas width=\"600\" height=\"200\"></canvas>\n                </div>\n\n                <div>\n                    <div className=\"uk-card-body\">\n                        <h2 className=\"uk-text-bolder\">New Run</h2>\n                        <form className=\"uk-grid-small\" uk-grid=\"true\" onSubmit={this.handleSubmit}>\n\n                            <div className=\"uk-width-1-2@s\">\n                                <label className=\"uk-form-label\">Date</label>\n                                <input\n                                    onChange={this.handleChange}\n                                    className=\"uk-input\"\n                                    name=\"date\"\n                                    id=\"date\"\n                                    type=\"date\"\n                                    max={today}\n                                />\n                            </div>\n\n                            <div className=\"uk-width-1-2@s\">\n                                <label className=\"uk-form-label\">Distance</label>\n                                <select className=\"uk-select\" id=\"distance\">\n                                    <option>5K</option>\n                                    <option>10K</option>\n                                    <option>15K</option>\n                                    <option>21K</option>\n                                    <option>30K</option>\n                                    <option>Marathon (42K)</option>\n                                </select>\n                            </div>\n\n                            <div className=\"uk-width-1-2@s\">\n                                <label className=\"uk-form-label\">Country</label>\n                                <input\n                                    onChange={this.handleChange}\n                                    className=\"uk-input\"\n                                    name=\"country\"\n                                    it=\"country\"\n                                    type=\"text\"\n                                />\n                            </div>\n\n                            <div className=\"uk-width-1-2@s\">\n                                <label className=\"uk-form-label\">City</label>\n                                <input\n                                    onChange={this.handleChange}\n                                    className=\"uk-input\"\n                                    name=\"city\"\n                                    it=\"city\"\n                                    type=\"text\"\n                                />\n                            </div>\n\n                            <div className=\"uk-width-1-2@s\">\n                                <label className=\"uk-form-label\">Run type</label>\n                                <select className=\"uk-select\" id=\"type\">\n                                    <option>Trail</option>\n                                    <option>Road</option>\n                                </select>\n                            </div>\n\n                            <div className=\"uk-width-1-2@s\">\n                                <label className=\"uk-form-label\">Timing (min)</label>\n                                <input\n                                    onChange={this.handleChange}\n                                    className=\"uk-input\"\n                                    name=\"timing\"\n                                    id=\"timing\"\n                                    type=\"number\"\n                                />\n                            </div>\n\n                            <button className=\"runform-button uk-width-1-2 uk-align-center\">Save Run</button>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n};\n\nexport default RunForm;","import React, { Component } from \"react\";\nimport dayjs from \"dayjs\";\nimport { getRun } from \"../../Services/runServices\";\nimport { denormalizeData, normalizeData } from \"../../Utils/dataUtils\";\n\nclass RunList extends Component {\n    state = {\n        runs: {},\n    };\n\n    componentDidMount() {\n        getRun().then((res) => {\n            const { result } = res.data;\n            const data = normalizeData(result);\n            this.setState({ runs: data });\n        });\n    };\n\n    render() {\n        const { runs } = this.state;\n\n        return (\n            <div>\n                <h2 className=\"uk-margin-top uk-margin-large-left uk-text-bolder\">All runs</h2>\n                <div className=\"uk-grid-column-small uk-grid-row-large uk-child-width-1-4@s uk-text-center uk-margin-top uk-margin-left\" uk-grid=\"true\">\n                    {denormalizeData(runs).map((run, index) => (\n                        <div key={index}>\n                            <div className=\"uk-card run-card\">\n                                <div className=\"uk-card-media-top\">\n                                    <img src=\"https://res.cloudinary.com/karen491/image/upload/c_scale,h_200,w_350/v1599410594/oblekco/my-runs_um7ssn.jpg\" alt=\"\" />\n                                </div>\n\n                                <div className=\"uk-text-left uk-margin uk-padding-small\">\n                                    <h5 className=\"uk-margin-small\"><span className=\"uk-text-bold\">Distance: </span>{run.distance}</h5>\n                                    <h5 className=\"uk-margin-small\"><span className=\"uk-text-bold\">Timing: </span>{`${run.timing} min`}</h5>\n                                    <h5 className=\"uk-margin-small\"><span className=\"uk-text-bold\">Date: </span>{dayjs(run.date).format(\"MMMM DD, YYYY\")}</h5>\n                                    <h5 className=\"uk-margin-small\"><span className=\"uk-text-bold\">Run type: </span>{run.type}</h5>\n                                    <h5 className=\"uk-margin-small\"><span className=\"uk-text-bold\">Place: </span>{`${run.city}, ${run.country}`}</h5>\n                                </div>\n                            </div>\n                        </div>\n                    ))}\n                </div>\n            </div>\n        )\n    }\n};\n\nexport default RunList;","export const normalizeData = (arr) => {\n    return arr.reduce((acc, item) => {\n      return { ...acc, [item._id]: item };\n    }, {});\n  };\n  \n  export const denormalizeData = (obj) => {\n    return Object.values(obj);\n  };\n  ","import React from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport AuthForm from \"./Components/HomeRoute/AuthForm\";\n//import Home from \"./Components/HomeRoute/Home\";\nimport RunForm from \"./Components/Runs/RunForm\";\nimport RunList from \"./Components/Runs/RunList\";\n\nconst Routes = () => (\n    <Switch>\n        <Route exact path=\"/\" component={AuthForm} />\n        {/* <Route exact path=\"/home\" component={Home} /> */}\n        <Route exact path=\"/signup\" component={AuthForm} />\n        <Route exact path=\"/newrun\" component={RunForm} />\n        <Route exact path=\"/myruns\" component={RunList} />\n    </Switch>\n);\n\nexport default Routes; ","import React, { Component } from 'react';\nimport AppContext from \"./AppContext\";\nimport './App.css';\nimport Navbar from \"./Components/Navbar/Navbar\";\nimport Routes from './Routes';\n\nclass App extends Component {\n  state = {\n    user: JSON.parse(localStorage.getItem(\"user\")) || {},\n  }\n\n  setUser = (user) => {\n    this.setState({ user });\n  };\n\n  render() {\n    const { state, setUser } = this;\n\n    return (\n      <AppContext.Provider\n        value={{\n          state,\n          setUser,\n        }}\n\n      >\n        <div className=\"home\">\n          {state.user._id && <Navbar />}\n          <Routes />\n        </div>\n      </AppContext.Provider>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport UIkit from \"uikit\";\nimport \"uikit/dist/css/uikit.min.css\";\nimport Icons from \"uikit/dist/js/uikit-icons\";\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from \"react-router-dom\";\n\nUIkit.use(Icons);\n\nconst WithRouter = () => (\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>\n);\n\nReactDOM.render(<WithRouter />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}